name: graphql_flutter

ide:
  intellij: true

packages:
  - packages/**

scripts:
  flutter_analyze:
    run: melos exec --depends-on="graphql" -c 1 -- "dart format --set-exit-if-changed . && flutter analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.
    select-package:
      flutter: true

  client_analyze:
    run: melos exec -c 1 -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.
    select-package:
      flutter: false

  comm_analyze:
    run: melos exec -c 1 -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.
    select-package:
      flutter: false

  test:
    description: Run tests in a specific package.
    run: melos exec -- "dart pub get && dart pub run test"
    select-package:
      flutter: false
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  flutter_test:
    description: Run tests in a specific package.
    run: melos exec --depends-on="graphql" -- "flutter test"
    select-package:
      flutter: true
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  client_test:
    description: Run tests in a specific package.
    run: melos exec -- "dart pub get && dart pub run test"
    select-package:
      flutter: false
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  comm_test:
    description: Run tests in a specific package.
    run: melos exec -- "dart pub get && dart pub run test"
    select-package:
      flutter: false
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  flutter_test_coverage:
    description: Run tests in a specific package.
    run: melos exec --depends-on="graphql" -- "flutter test --coverage"
    select-package:
      flutter: true
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  client_test_coverage:
    description: Run tests in a specific package.
    run: melos exec -- "dart run test --coverage="coverage" && dart run coverage:format_coverage --lcov --in=coverage --out=coverage.lcov --packages=.dart_tool/package_config.json --report-on=lib"
    select-package:
      flutter: false
      dir-exists:
        - "test/"
    env:
      MELOS_TEST: true

  format: dart format -o write .

command:
  bootstrap:
    usePubspecOverrides: true
